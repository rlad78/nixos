# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/3932efc6-7e18-494c-aee6-eaac3a75ab1c";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/0341-29AE";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  # STORAGE DISKS
  users.groups.storage.members = [ "richard" "syncthing" ];
  
  ## 1TB spinning rust
  systemd.tmpfiles.rules = [ "d /storage 0775 root storage" ];
  fileSystems."/storage" =
    { device = "/dev/disk/by-uuid/0082b0dd-ef0c-4928-84d6-f9206600aa4b";
      fsType = "ext4";
    };

  swapDevices = [ ];
  swapDevices =
    [ { device = "/dev/disk/by-uuid/3c9c2e8b-0906-4710-8773-2e593babb6c2"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s25.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
